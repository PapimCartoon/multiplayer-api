#summary Frequently Asked Questions.

=== How did you ensure that people cannot break your API and cheat in games? ===

First, the Multiplayer API is only an API to write games, i.e., if you write games with security holes then it will be easier to cheat in them. Also, the API does not define the communication protocol with the server (it only defines the communication between the _game_ and its _container_).
On the [Come2Play] platform, the communication is encrypted and the _container_ SWF is encrypted and obfuscated. Therefore it is unlikely that hackers will be able to cheat.

Now, suppose you wrote your game very carefully, and checked that every message is legal, the question becomes what happens when a player sends you an illegal message?
One solution is to cancel the game, and another solution is to have a 3^rd^ party that checks the messages.
Therefore, the Multiplayer API has two APIs that you can choose from: (i) [ClientGameAPI] and (ii) [ScriptGameAPI].

In [ClientGameAPI] you use only client side code, and in [ScriptGameAPI] you use both client-side and server-side code.

In [ClientGameAPI], the clients should check the legality of the messages, and should call [doAllFoundHacker] if there is an illegal message. In [ScriptGameAPI], the script checks the legality of messages, and if a player "lies" to the script, then the script can decide that this player lost.

In [ClientGameAPI], the clients agree together when the match ends, and all of them should call [doAllEndMatch] with the same parameters to end the match. In [ScriptGameAPI], the script alone can decide when the match is over, and who is the winner.

The pros of using [ScriptGameAPI] is that it is secure, however there are many cons as well: it is harder to program server-side code, you have use a server to host your script, and it may slow down the game if the script is used very often. 

To conclude, if you wrote your game well, then in [ClientGameAPI] an hacker can cause the game to be canceled, while in [ScriptGameAPI] the hacker will lose the game.

On [Come2Play] platform, a game developer gets a summary of all errors in his games. The game developer should examine the errors to see if the bugs are on his side, or if a hacker caused the cancelation. If it is a hacker, then the game developer should report it and [Come2Play] will examine that hacker account and may take legal actions against him.