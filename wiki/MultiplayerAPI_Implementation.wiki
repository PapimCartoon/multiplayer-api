#summary The Multiplayer API implementation details using LocalConnection (the protocol between the game and the container).

We use LocalConnection to pass commands, therefore, there is a 40K limit on arguments to these methods.


`do_finished_callback` is called by the game after every time the container calls some callback `got*`.


In [TableOfContent Multiplayer API] section we explained that the API is a bridge between the _game_ (written by game developers) and the _container_ (written by the website hosting the game).
The game SWF is loaded by a _container_ that communicates with the _game_ 
using a LocalConnection. 
There are two issues:
  * how to determine the channel name that the container and game should use, and
  * what happens to objects of type `ServerEntry`, `UserEntry`, 'RevealEntry', and `PlayerMatchOver` when they are passed over a LocalConnection?

The later question:
Note that each of the classes has a method called `object2XXXX`,
e.g., `object2Entry`.
When an object of type `Entry` is passed on a LocalConnection, it is automatically
converted to an object of type `Object`, and the receiving end should transform this `Object` into an `Entry`
using the function `object2XXXX`.

The former question:
To make sure the container and game use the same LocalConnection channel, we use a flashvar parameter called `prefix`
to determine the channel name.
There is one channel for `do_` operations, and another for `got_` callbacks:
{{{
"DO_CHANEL_" + prefix
"GOT_CHANEL_" + prefix
}}}