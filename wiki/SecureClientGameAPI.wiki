#summary A secure multiplayer API

This API is a secure variant of [ClientGameAPI],
where in addition to the players there is another program called a _juror_
that decides the game outcome (i.e., who is the winner).

Each flash SWF file is either a user (a player/viewer with a `user_id>0`) or a juror (with `user_id=-1`).

The following functions are applicable both for users and jurors, and have the same semantics as in [ClientGameAPI]:
{{{
got_my_user_id
got_general_info
got_user_info
got_user_disconnected
got_match_started
got_match_over
got_start_turn_of
got_end_turn_of
do_send_message
got_message
do_set_timer
got_timer
}}}

The following functions were removed from [ClientGameAPI]:
{{{
do_agree_on_match_over
do_client_protocol_error_with_description
do_start_my_turn
do_end_my_turn
do_store_match_state
}}}
Note that the players no longer handle ending the match 
or deciding on who has the turn.
The _juror_ is now in charge of these.

These are the new additions to SecureClientGameAPI:
{{{
do_juror_store_match_state(secret_level:int, user_entry:UserEntry)
do_user_store_match_state(secret_level:int, entry:Entry)
got_secure_stored_match_state(secret_level:int, user_entry:UserEntry)

do_juror_unfold_match_state(key:String, to_user_id:int)
do_juror_shuffle_match_state(keys:Array/*String*/)

do_juror_set_turn(turn_of_player_id:int)
do_juror_end_match(finished_players:Array/*PlayerMatchOver*/)
}}}

`do_juror_` are operations for the juror only,
and `do_user_store_match_state` is for the users (players/viewers) only.
`got_secure_stored_match_state` is called on both jurors and users.


=== High level description of the functions === 

|| *Function* || *Description* ||
|| `do_juror_store_match_state` || The juror stores a match state for a certain user ||
|| `do_user_store_match_state` || The user stores a match state for himself ||
|| `got_secure_stored_match_state` || A user or a juror is updated on changes of match state ||
|| `do_juror_unfold_match_state` || The values of certain keys are unfolded to a certain user ||
|| `do_juror_shuffle_match_state` || The values of certain keys in the match state are shuffled ||
|| [do_juror_set_turn] || The juror decides who has the turn (in turn-based games)  ||
|| [do_juror_end_match] || The juror decides that the match ended ||

[SecureMatchState] discusses the match state of SecureClientGameAPI 
(and explains the first 5 functions above). 
 