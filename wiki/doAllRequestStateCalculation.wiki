#summary preform secret calculations

{{{
doAllRequestStateCalculation(keys:Array/*String*/)
}}}

In game development there are many games which need secret game calculations, 
unlike checkers where all players can calculate if a move is legal,
there are games where the game board should be secret,
take mine sweeper for example ,
the game cannot simply be shuffled because whenever you press a brick without a mine you should get an indication of how many mines are around,
this data will not be created by a shuffle and none of the players can make this calculation because we must assume one of the players can be a hacker,
which means he might retrieve the data and have the entire calculated game board in his hands.
therefore we must choose a third party outside the game to make the calculations for us,
this third party will be called a calculator.
A calculator is a different user playing in another game room which will do the calculations
for both players to keep them secret.

to call the calculator all the player in the game need to call `doAllRequestStateCalculation` with the following parameters:

`keys` -  an Array of keys previously stored in the game state which will used by the calculator.

all keys in the Array sent to the calculator will automatically be public to him, as an impartial side in the game.

after the calculation is done the calculator will store the calculations on the server in the game state,
as either secret ServerEntries or public ones.


{{{
GotRequestStateCalculation(serverEntries:Array/*ServerEntry*/)
}}}

This event is called on a user playing in another game room, which doesn't even know he was chosen as a calculator.
the calculator gets the serverEntries with the corresponding keys to the ones the players sent.


{{{
doAllStoreStateCalculation(userEntries:Array/*UserEntry*/)
}}}

When the calculator finished with the data he was given,he stores a set of userEntries through A `doAllStoreStateCalculation`
which acts just like the [doAllStoreState] function,only instead of saving the game data into his server state,he saves it into
the game state of players which called the `doAllRequestStateCalculation`.