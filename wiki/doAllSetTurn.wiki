#summary Handling who has the current turn (For Turn-based games)

{{{
doAllSetTurn(userId:int, milliSecondsInTurn:int)
}}}

=== Description ===

Call this function to prevent hackers for stagnating your game


=== Parameters ===

userId -  the user ID of the player you want  to make a move, -1 for all players

milliSecondsInTurn - the time the user has to make his turn before being declared as a hacker.


=== Example ===

==== Example 1 ====
it is the player 1 turn to play in a game of TicTacToe where each move must be made after a maximum of 5 seconds
{{{
	doAllSetTurn(1, 5000);
}}}

In this example you have to remember that as the game developer you must declare a player
which hasn't made his turn after 5 seconds as the loser, to prevent him from being considered a hacker.


==== Example 2 ====
we are playing a trivia game where everyone has 10 seconds to answer a question
{{{
	doAllSetTurn(-1, 10000);
}}}

In this example you have to remember that as the game developer you must declare a player
which hasn't submitted his answer after 10 seconds as the submitter of a blank answer, to prevent him from being considered a hacker.


=== Why should I use this? ===

The `doAllSetTurn` function is used to prevent stagnation, a situation where one player
is cheating by deliberately not making a move , thus ruining the game for the rest of the players.

Essentially what the function does is to force a specific player or the entire game players to make a move.

It achieves it by declaring a player which has not made a move after the specified time as a hacker.

=== Important note ===
It is crucial to understand that a move does not have to be an active participation of the player.

A move can also be a signal, which triggers a `doAllSetTurn` function by all the players,

made by the game to show that the player isn't deliberately blocking communication.


