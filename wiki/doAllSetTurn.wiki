#summary Handling who has the current turn (For Turn-based games)

{{{
doAllSetTurn(userId:int, milliSecondsInTurn:int)
}}}

Some of the games developed are turn-based, i.e., the game proceeds in turns where in each given moment only
one player has the current turn. 
For example, Chess or Poker are turn-based games.
In contrast, Soccer is a real-time game where both players send commands to the server simultaneously.
Turn-based games may be played in turns using emails or other means.
For example, in a game of Chess, one player may make a turn, then the next player will get an email notification
and he may make the next turn, and so forth.

The `doAllSetTurn` function is used to prevent stagnation, a situation where one player
is cheating by deliberately not making a move , thus ruining the game for the rest of the players.
if the milliSecondsInTurn has passed and the game did not send any input to the server,
the player which holds the current turn automatically loses.

In a Turn-based game whenever the turn changes in response to a change in the game state,all players
must call the function doAllSetTurn with the following parameters:

`userId` - is the user id of the next player, if the game has no current player but rather a timer fo all players
like a trivia game which gives everyone 10 seconds to answer the question then set `userId` to -1

`milliSecondsInTurn` - milliSeconds in turn of the next player turn,
if the `milliSecondsInTurn` will be -1 the time for each turn length will be set from outside,

for example a server can contain two instances of a chees game one with a 1 minute turn length
and the other with 10 minutes per turn.





 

