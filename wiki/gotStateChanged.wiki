#summary The callback received after every server state change

{{{
gotStateChanged(serverEntries:Array/*ServerEntry*/)
}}}

=== Description ===

This callback is triggered by ever change in the [MatchState].

=== Parameters received===

serverEntries - an Array of [ServerEntry] elements, containing the server entries changed by
whatever function the users called


=== Example ===

player 1 stores are secret number on user input

{{{

public function onUserInput(num:int):void
{
	var keyObj:Object = new Object();
	keyObj.userId = myUserId;
	keyObj.type = "number";
	var userEntry:UserEntry = UserEntry.create(keyObj,num,false);
	var userEntries:Arrat = new Array();
	userEntries.push(userEntry);
	doStoreState(userEntries);
}


override public function gotStateChanged(serverEntries:Array):void
{
	var serverEntry:ServerEntry = serverEntries[0];
	if(serverEntry.type == "number")
	{
		if (serverEntry.storedByUserId != serverEntry.key.userId) doAllFoundHacker(serverEntry.storedByUserId,"player tried to store a value on someone else's key");
		trace("player " + serverEntry.key.userId + " typed "+serverEntry.value);
	
	}
	
}

}}}